{"version":3,"file":"components/theme/theme-provider.min.js","sources":["webpack://purecn/./src/components/theme/theme-provider.ts"],"sourcesContent":["import { baseCss, lightCss, darkCss } from './index';\nconst BASE_STYLE_ID = 'purecn-theme-base';\nconst LIGHT_STYLE_ID = 'purecn-theme-light';\nconst DARK_STYLE_ID = 'purecn-theme-dark';\nconst THEME_STORAGE_KEY = 'purecn-theme';\nlet styleTagsInjected = false;\n/**\n * Injects the base, light, and dark theme CSS variables into the document head.\n * Should be called once when the application initializes.\n */\nexport function applyThemes() {\n    if (typeof document === 'undefined' || styleTagsInjected) {\n        return; // Don't run in non-browser environments or if already injected\n    }\n    // Create and inject base styles\n    if (!document.getElementById(BASE_STYLE_ID)) {\n        const baseStyle = document.createElement('style');\n        baseStyle.id = BASE_STYLE_ID;\n        baseStyle.textContent = baseCss;\n        document.head.appendChild(baseStyle);\n    }\n    // Create and inject light theme styles\n    if (!document.getElementById(LIGHT_STYLE_ID)) {\n        const lightStyle = document.createElement('style');\n        lightStyle.id = LIGHT_STYLE_ID;\n        lightStyle.textContent = lightCss; // Light theme styles are applied by default\n        document.head.appendChild(lightStyle);\n    }\n    // Create and inject dark theme styles (initially might not be needed if using .dark class solely)\n    // Alternatively, keep it for users who might want to manually toggle style tags.\n    if (!document.getElementById(DARK_STYLE_ID)) {\n        const darkStyle = document.createElement('style');\n        darkStyle.id = DARK_STYLE_ID;\n        darkStyle.textContent = darkCss;\n        // We control dark mode primarily via the `.dark` class on the body/html\n        // but including the style tag ensures the definitions are present.\n        // It could be initially disabled: darkStyle.disabled = true; if needed.\n        document.head.appendChild(darkStyle);\n    }\n    styleTagsInjected = true;\n    // Apply the initially saved or system theme\n    const storedTheme = localStorage.getItem(THEME_STORAGE_KEY);\n    setTheme(storedTheme || 'system'); // Default to system if nothing stored\n}\n/**\n * Sets the active theme (light, dark, or system preference) and updates the body class.\n * @param theme - The theme to apply ('light', 'dark', 'system').\n */\nexport function setTheme(theme) {\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n        return;\n    }\n    localStorage.setItem(THEME_STORAGE_KEY, theme);\n    let effectiveTheme;\n    if (theme === 'system') {\n        effectiveTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    else {\n        effectiveTheme = theme;\n    }\n    if (effectiveTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n    }\n    else {\n        document.documentElement.classList.remove('dark');\n    }\n    // Optional: If you wanted to toggle style tags instead of just using the class:\n    // const lightStyle = document.getElementById(LIGHT_STYLE_ID) as HTMLStyleElement | null;\n    // const darkStyle = document.getElementById(DARK_STYLE_ID) as HTMLStyleElement | null;\n    // if (lightStyle) lightStyle.disabled = effectiveTheme === 'dark';\n    // if (darkStyle) darkStyle.disabled = effectiveTheme === 'light';\n}\n// Optional: Listen for system theme changes if the current theme is 'system'\nif (typeof window !== 'undefined') {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    mediaQuery.addEventListener('change', () => {\n        const storedTheme = localStorage.getItem(THEME_STORAGE_KEY);\n        if (storedTheme === 'system') {\n            setTheme('system'); // Re-evaluate system theme\n        }\n    });\n}\n"],"names":["BASE_STYLE_ID","LIGHT_STYLE_ID","DARK_STYLE_ID","THEME_STORAGE_KEY","styleTagsInjected","applyThemes","document","getElementById","baseStyle","createElement","id","textContent","head","appendChild","lightStyle","darkStyle","setTheme","localStorage","getItem","theme","window","effectiveTheme","setItem","matchMedia","matches","documentElement","classList","add","remove","addEventListener"],"mappings":"ihIACA,MAAMA,EAAgB,oBAChBC,EAAiB,qBACjBC,EAAgB,oBAChBC,EAAoB,eAC1B,IAAIC,GAAoB,EAKjB,SAASC,IACZ,GAAwB,qBAAbC,UAA4BF,EACnC,OAGJ,IAAKE,SAASC,eAAeP,GAAgB,CACzC,MAAMQ,EAAYF,SAASG,cAAc,SACzCD,EAAUE,GAAKV,EACfQ,EAAUG,YAAc,KACxBL,SAASM,KAAKC,YAAYL,EAC9B,CAEA,IAAKF,SAASC,eAAeN,GAAiB,CAC1C,MAAMa,EAAaR,SAASG,cAAc,SAC1CK,EAAWJ,GAAKT,EAChBa,EAAWH,YAAc,KACzBL,SAASM,KAAKC,YAAYC,EAC9B,CAGA,IAAKR,SAASC,eAAeL,GAAgB,CACzC,MAAMa,EAAYT,SAASG,cAAc,SACzCM,EAAUL,GAAKR,EACfa,EAAUJ,YAAc,KAIxBL,SAASM,KAAKC,YAAYE,EAC9B,CACAX,GAAoB,EAGpBY,EADoBC,aAAaC,QAAQf,IACjB,SAC5B,CAKO,SAASa,EAASG,GACrB,GAAwB,qBAAbb,UAA8C,qBAAXc,OAC1C,OAGJ,IAAIC,EADJJ,aAAaK,QAAQnB,EAAmBgB,GAGpCE,EADU,WAAVF,EACiBC,OAAOG,WAAW,gCAAgCC,QAAU,OAAS,QAGrEL,EAEE,SAAnBE,EACAf,SAASmB,gBAAgBC,UAAUC,IAAI,QAGvCrB,SAASmB,gBAAgBC,UAAUE,OAAO,OAOlD,CAEA,GAAsB,qBAAXR,OAAwB,CACZA,OAAOG,WAAW,gCAC1BM,iBAAiB,UAAU,KAEd,WADAZ,aAAaC,QAAQf,IAErCa,EAAS,SACb,GAER,C"}